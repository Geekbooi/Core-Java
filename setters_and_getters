public class Account
{
private String name;
// an instance variable which is accessable in this class only(over shadow)
public void setName(String name)
//has local variable called name
{
this.name = name;
//coz the instance and the local variable have the same name we use the keyword this to differentiate
}
 
public String getName ()
{
return name;
}}


import java.util.Scanner
public class AccountTest
{

public static void main(String[] args)
{

Scanner input = new Scanner(System.in);
// to accept user input and save it in "input"

Account myAccount = new Account();
//myAccount is the copy of the class Account, it takes the ref of the class Account

System.out.printf("Initial name is: %s%n%n", myAccount.getName());
//% is place holder and "s" is string and call the method getName from the class Account

System.out.printin("Please enter the name:"),

String theName = input.nextLine();
// nextline reads the first input sentence or word and give it to the variable "theName"
myAccount.setName(theName);
// we call the setName and copy the vlaue(theName)

System.out.printin();
// printing new line
System.out.printf("Name in object myAccount is:%n%s%n",
%n is to print a new line
myAccount.getName());:
// it will display the theName that we entered
}
}

// most of the time we use the SET keyword for entering and registering email address and GET to verify weather the info entered is correct or not

# Using Setters and getters can have security issues, coz they are public methods. So instead use CLONE
Such a thing is mostly done for MUTABLE objects only, in places where you want to give out all the information about the object to the client, 
and yet prevent the client from making changes to the original copy.

# Like this 
   public String getName ()
    {
   return name.clone();
